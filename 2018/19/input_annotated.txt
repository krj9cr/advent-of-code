addi 2 16 2 # reg2 = reg2 + 16 (ip + 16 + 1)
seti 1 1 1  # reg1 = 1 [0, 1, 0, 10551396, 10550400, 0] or [0, 1, 0, 996, 160, 0]
seti 1 8 5  # reg5 = 1 [0, 1, 2, 10551396, 10550400, 1] or [0, 1, 0, 996, 160, 1]
loop mulr 1 5 4  # reg4 = reg1 * reg5 
eqrr 4 3 4  # if reg4 == reg3, reg4 = 1, else reg4 = 0
addr 4 2 2  # reg2 = reg4 + reg2    (ip + reg4)
addi 2 1 2  # reg2 = reg2 + 1       (ip + 1 + 1)
addr 1 0 0  # reg0 = reg1 + reg0
addi 5 1 5  # reg5 = reg5 + 1
gtrr 5 3 4  # if reg5 > reg3, reg4 = 1, else reg4 = 0 [0, 1, 2, 10551396, 0, 10551396]
addr 2 4 2  # reg2 = reg2 + reg4    (ip + reg4 + 1) ##### go back to 3
seti 2 0 2  # reg2 = 2              (ip = 2 + 1)
addi 1 1 1  # reg1 = reg1 + 1
gtrr 1 3 4  # if reg1 > reg3, reg4 = 1, else reg4 = 0
addr 4 2 2  # reg2 = reg4 + reg2    (ip + reg4 + 1)
seti 1 1 2  # reg2 = 1              (ip = 1 + 1)
mulr 2 2 2  # reg2 = reg2 * reg2    (ip * ip + 1)
addi 3 2 3  # reg3 = reg3 + 2
mulr 3 3 3  # reg3 = reg3 * reg3
mulr 2 3 3  # reg3 = reg2 * reg3
muli 3 11 3 # reg3 = reg3 * 11
addi 4 7 4  # reg4 = reg4 + 7
mulr 4 2 4  # reg4 = reg4 * 2
addi 4 6 4  # reg4 = reg4 + 2
addr 3 4 3  # reg3 = reg3 + reg4
addr 2 0 2  # reg2 = reg2 + reg0    (ip + reg0)
seti 0 3 2  # reg2 = 0              (ip = 0 + 1)
setr 2 0 4  # reg4 = reg2
mulr 4 2 4  # reg2 = reg2 * reg4
addr 2 4 4  # reg4 = reg2 + reg4
mulr 2 4 4  # reg4 = reg2 * reg4
muli 4 14 4 # reg4 = reg4 * 14
mulr 4 2 4  # reg4 = reg4 * reg2
addr 3 4 3  # reg3 = reg3 + reg4
seti 0 4 0  # reg0 = 0
seti 0 4 2  # reg2 = 0              (ip = 0 + 1)